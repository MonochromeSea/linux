name: Build Binder Driver
on: [workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-22.04  # 稳定版本，避免兼容性问题
    steps:
      - name: Install core dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            build-essential gcc make libncurses5-dev \
            flex bison openssl libssl-dev libelf-dev \
            bc git libzstd-dev dwarves

      - name: Clone Linux kernel v6.12
        run: |
          git clone --depth 1 --branch v6.12 https://github.com/torvalds/linux.git
          cd linux
          # 验证Binder源码存在
          if [ ! -f "drivers/android/binder.c" ]; then
            echo "Error: binder.c not found!"
            exit 1
          fi

      - name: Configure kernel (ensure Binder params生效)
        run: |
          cd linux
          # 1. 生成默认配置（基础配置模板）
          make defconfig
          
          # 2. 使用内核原生工具设置配置，避免语法问题
          # 关键：--set-str 用于字符串类型配置，确保参数被正确解析
          scripts/config --set-str CONFIG_ANDROID_BINDER_DEVICES "binder,hwbinder,vndbinder"
          scripts/config --enable CONFIG_ANDROID_BINDER_IPC  # 启用Binder IPC
          scripts/config --set-val CONFIG_ANDROID_BINDER_IPC m  # 编译为模块
          scripts/config --enable CONFIG_ANDROID_BINDERFS  # 启用BinderFS支持
          
          # 3. 验证配置是否真正生效（关键检查步骤）
          echo "=== 验证配置结果 ==="
          if grep -q "CONFIG_ANDROID_BINDER_DEVICES" .config; then
            grep "CONFIG_ANDROID_BINDER_DEVICES" .config
          else
            echo "Error: CONFIG_ANDROID_BINDER_DEVICES 未生效！"
            exit 1
          fi
          grep -E "CONFIG_ANDROID_BINDER_IPC|CONFIG_ANDROID_BINDERFS" .config
          
          # 4. 准备模块编译环境（生成符号表、依赖文件）
          make modules_prepare V=1

      - name: Build Binder driver (详细日志)
        run: |
          cd linux
          # 启用详细编译日志，便于定位问题
          make drivers/android/binder.ko V=1 -j$(nproc)

      - name: Verify build result
        run: |
          cd linux
          if [ -f "drivers/android/binder.ko" ]; then
            echo "=== 编译成功 ==="
            ls -l drivers/android/binder.ko
            # 显示模块信息（验证模块有效性）
            modinfo drivers/android/binder.ko || true
          else
            echo "=== 编译失败：binder.ko未生成 ==="
            exit 1
          fi

      - name: Upload compiled module
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: binder-ko-v6.12-x86_64
          path: linux/drivers/android/binder.ko
          retention-days: 14  # 延长保留时间，方便下载
