name: Build Binder Driver (v6.12)
on: [workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Install all required dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            build-essential gcc make libncurses5-dev \
            flex bison openssl libssl-dev libelf-dev \
            bc git libzstd-dev dwarves pkg-config

      - name: Clone Linux kernel v6.12 source
        run: |
          git clone --depth 1 --branch v6.12 https://github.com/torvalds/linux.git
          cd linux
          # 确认Binder源码存在
          if [ ! -f "drivers/android/binder.c" ]; then
            echo "Fatal error: binder.c not found in kernel source!"
            exit 1
          fi

      - name: Prepare kernel module build environment
        run: |
          cd linux
          # 1. 生成基础配置（仅用于获取内核编译所需的基础参数）
          make defconfig
          # 2. 准备模块编译的必要文件（符号表、头文件依赖等）
          make modules_prepare V=1
          # 3. 验证模块编译环境是否就绪
          if [ ! -f "Module.symvers" ]; then
            echo "Error: Module.symvers not generated (environment preparation failed)!"
            exit 1
          fi

      - name: Build Binder driver (force define missing macro)
        run: |
          cd linux
          # 关键：通过 EXTRA_CFLAGS 强制传入 CONFIG_ANDROID_BINDER_DEVICES 定义
          # 直接跳过内核配置文件，确保编译器能识别该宏
          make drivers/android/binder.ko \
            V=1 \
            -j$(nproc) \
            EXTRA_CFLAGS="-DCONFIG_ANDROID_BINDER_DEVICES=\"binder,hwbinder,vndbinder\"" \
            EXTRA_CPPFLAGS="-DCONFIG_ANDROID_BINDER_IPC=1 -DCONFIG_ANDROID_BINDERFS=1"
          # 说明：
          # - EXTRA_CFLAGS：给C编译器传递额外参数
          # - EXTRA_CPPFLAGS：给C预处理器传递额外参数
          # - 直接定义宏的值，避免依赖.config文件

      - name: Verify build success
        run: |
          cd linux
          if [ -f "drivers/android/binder.ko" ]; then
            echo "====================================="
            echo "Binder driver compiled successfully!"
            echo "====================================="
            # 显示模块详细信息（确认模块有效）
            ls -lh drivers/android/binder.ko
            modinfo drivers/android/binder.ko
          else
            echo "====================================="
            echo "Build failed: binder.ko not found!"
            echo "====================================="
            exit 1
          fi

      - name: Upload compiled Binder module
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: binder-module-v6.12-x86_64
          path: linux/drivers/android/binder.ko
          retention-days: 30  # 延长保留时间，方便下载使用
