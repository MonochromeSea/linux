name: Compile Binder Module (Force Symvers Generation)
on:
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Linux 6.12
        uses: actions/checkout@v4
        with:
          repository: torvalds/linux
          ref: v6.12
          fetch-depth: 1

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y \
            build-essential libncurses5-dev libssl-dev \
            flex bison libelf-dev dwarves zstd bc \
            gcc-multilib libc6-dev-i386

      - name: Configure Kernel
        run: |
          # 生成默认配置
          make defconfig
          
          # 启用模块支持和binder模块
          scripts/config --enable CONFIG_MODULES
          scripts/config --set-val CONFIG_ANDROID_BINDER_IPC m
          scripts/config --set-val CONFIG_ANDROID_BINDERFS m
          scripts/config --enable CONFIG_ANDROID
          scripts/config --disable CONFIG_MODULE_SIG
          
          # 验证配置
          echo "关键配置检查："
          cat .config | grep -E "CONFIG_MODULES|CONFIG_ANDROID_BINDER"

      - name: Force Generate Module.symvers
        run: |
          # 第一步：编译一个简单的内核模块来触发Module.symvers生成
          # 选择一个简单的模块目录
          make -j$(nproc) M=lib/ -k  # -k 选项确保即使有错误也继续执行
          
          # 第二步：编译内核核心符号
          make -j$(nproc) vmlinux -k
          
          # 检查是否生成了Module.symvers
          if [ -f "Module.symvers" ]; then
            echo "成功生成Module.symvers"
            ls -la Module.symvers
            cat Module.symvers | head -n 5  # 显示前5行验证内容
          else
            echo "仍然无法生成Module.symvers，尝试备用方法"
            # 备用方法：手动创建最小化的Module.symvers
            echo "0x0000000000000000 module_layout vmlinux EXPORT_SYMBOL_GPL" > Module.symvers
            ls -la Module.symvers
          fi

      - name: Compile Binder Module
        run: |
          # 确保符号表存在于正确位置
          if [ -f "Module.symvers" ]; then
            cp Module.symvers drivers/android/
          fi
          
          # 编译binder模块，允许警告但不中断
          make M=drivers/android -j$(nproc) V=1 KBUILD_MODPOST_WARN=1

      - name: Check Results
        run: |
          echo "drivers/android目录内容："
          ls -la drivers/android/
          
          echo "查找.ko文件："
          find drivers/android/ -name "*.ko"
          
          # 检查是否生成binder.ko
          if [ -f "drivers/android/binder.ko" ]; then
            echo "binder模块编译成功！"
            modinfo drivers/android/binder.ko
          else
            echo "binder模块未生成！"
            exit 1
          fi

      - name: Upload Modules
        uses: actions/upload-artifact@v4
        with:
          name: binder-modules
          path: drivers/android/*.ko
