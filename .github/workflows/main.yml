name: Compile Binder Module (Final Solution)
on:
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Linux 6.12
        uses: actions/checkout@v4
        with:
          repository: torvalds/linux
          ref: v6.12
          fetch-depth: 1

      - name: Install All Dependencies
        run: |
          sudo apt update && sudo apt install -y \
            build-essential libncurses5-dev libssl-dev \
            flex bison libelf-dev dwarves zstd bc \
            gcc-multilib libc6-dev-i386 kmod

      - name: Configure Kernel Properly
        run: |
          # 生成默认配置
          make defconfig
          
          # 关键配置：启用模块支持和binder作为模块
          scripts/config --enable CONFIG_MODULES
          scripts/config --enable CONFIG_MODULE_UNLOAD
          scripts/config --set-val CONFIG_ANDROID_BINDER_IPC m
          scripts/config --set-val CONFIG_ANDROID_BINDERFS m
          scripts/config --enable CONFIG_ANDROID
          scripts/config --disable CONFIG_MODULE_SIG
          
          # 验证配置
          echo "=== 配置验证 ==="
          cat .config | grep -E "CONFIG_MODULES|CONFIG_ANDROID_BINDER"

      - name: Full Kernel Initialization (Critical)
        run: |
          # 完整的内核初始化步骤，确保生成所有必要文件
          make -j$(nproc) prepare
          make -j$(nproc) scripts
          make -j$(nproc) modules_prepare
          
          # 编译一个基础模块来强制生成Module.symvers
          make -j$(nproc) M=drivers/char/ -k
          
          # 检查并报告Module.symvers状态
          if [ -f "Module.symvers" ]; then
            echo "=== Module.symvers成功生成 ==="
            ls -la Module.symvers
            cat Module.symvers | head -n 5
          else
            echo "=== 仍未生成Module.symvers，创建基础版本 ==="
            # 创建包含基本符号的Module.symvers
            echo "0x0000000000000000 module_layout vmlinux EXPORT_SYMBOL_GPL" > Module.symvers
            echo "0x0000000000000000 __this_module vmlinux EXPORT_SYMBOL" >> Module.symvers
            ls -la Module.symvers
          fi

      - name: Compile Binder Module with Symvers
        run: |
          # 确保符号表在正确位置
          cp Module.symvers drivers/android/
          
          # 编译binder模块，显示详细过程
          make M=drivers/android -j$(nproc) V=1 KBUILD_MODPOST_WARN=1

      - name: Verify and Collect Results
        run: |
          echo "=== 编译结果检查 ==="
          ls -la drivers/android/
          
          echo "=== 查找生成的模块 ==="
          find drivers/android/ -name "*.ko"
          
          # 检查是否成功生成binder.ko
          if [ -f "drivers/android/binder.ko" ]; then
            echo "=== 成功生成binder模块 ==="
            modinfo drivers/android/binder.ko
          else
            echo "=== 编译失败，查看完整日志 ==="
            cat drivers/android/build.log
            exit 1
          fi

      - name: Upload Binder Modules
        uses: actions/upload-artifact@v4
        with:
          name: binder-modules-v6.12
          path: drivers/android/*.ko
          retention-days: 14
